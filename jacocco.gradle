apply plugin: 'jacoco'

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: ext.excludes.list)
def kotlinDebugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug", excludes: ext.excludes.list)
def mainSrc = "${project.projectDir}/src/main/java"
def includes = [
        "jacoco/testDebugUnitTest.exec",
        "outputs/code-coverage/connected/*coverage.ec"
]

task jacocoTestReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {
    reports {
        xml.enabled = true
        html.enabled = true
    }
    getSourceDirectories().setFrom(files([mainSrc]))
    getClassDirectories().setFrom(files([debugTree, kotlinDebugTree]))
    getExecutionData().setFrom(fileTree(dir: "$buildDir", includes: includes))
}